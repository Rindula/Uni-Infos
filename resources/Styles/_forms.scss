.toggleButton {
    $size: 20px;
    cursor: pointer;
    display: block;
    transform-origin: 50% 50%;
    transform-style: preserve-3d;
    transition: transform .14s ease;

    &:active {
        transform: rotateX(30deg);
    }

    label {
        display: inline-block;
        margin-left: 10px;
    }

    input {
        display: none;

        & + div {
            border: ($size / 14.66666666666666666666666666666666666666) solid rgba($text-color, .2);
            border-radius: 50%;
            position: relative;
            width: $size;
            height: $size;

            svg {
                fill: none;
                stroke-width: ($size / 12.2222222222222222222222222222222222222222222);
                stroke: $color-error;
                stroke-linecap: round;
                stroke-linejoin: round;
                width: $size;
                height: $size;
                display: block;
                position: absolute;
                left: -($size / 14.66666666666666666666666666666666666666);
                top: -($size / 14.66666666666666666666666666666666666666);
                right: -($size / 14.66666666666666666666666666666666666666);
                bottom: -($size / 14.66666666666666666666666666666666666666);
                z-index: 1;
                stroke-dashoffset: 162.6 - 38;
                stroke-dasharray: 0 162.6 133 (162.6 - 133);
                transition: all .4s ease 0s;
            }

            &:before,
            &:after {
                content: '';
                width: ($size / 14.66666666666666666666666666666666666666);
                height: ($size / 2);
                background: lighten($color-error, 20);
                position: absolute;
                left: 50%;
                top: 50%;
                border-radius: 5px;
            }

            &:before {
                opacity: 0;
                transform: scale(.3) translate(-50%, -50%) rotate(45deg);
                animation: bounceInBefore .3s linear forwards .3s;
            }

            &:after {
                opacity: 0;
                transform: scale(.3) translate(-50%, -50%) rotate(-45deg);
                animation: bounceInAfter .3s linear forwards .3s;
            }
        }

        &:checked + div {
            svg {
                stroke-dashoffset: 162.6;
                stroke-dasharray: 0 162.6 28 (162.6 - 28);
                transition: all .4s ease .2s;
                stroke: $color-success
            }

            &:before {
                opacity: 0;
                transform: scale(.3) translate(-50%, -50%) rotate(45deg);
                animation: bounceInBeforeDont .3s linear forwards 0s;
            }

            &:after {
                opacity: 0;
                transform: scale(.3) translate(-50%, -50%) rotate(-45deg);
                animation: bounceInAfterDont .3s linear forwards 0s;
            }
        }
    }
}

@keyframes bounceInBefore {
    0% {
        opacity: 0;
        transform: scale(.3) translate(-50%, -50%) rotate(45deg);
    }
    50% {
        opacity: 0.9;
        transform: scale(1.1) translate(-50%, -50%) rotate(45deg);
    }
    80% {
        opacity: 1;
        transform: scale(.89) translate(-50%, -50%) rotate(45deg);
    }
    100% {
        opacity: 1;
        transform: scale(1) translate(-50%, -50%) rotate(45deg);
    }
}

@keyframes bounceInAfter {
    0% {
        opacity: 0;
        transform: scale(.3) translate(-50%, -50%) rotate(-45deg);
    }
    50% {
        opacity: 0.9;
        transform: scale(1.1) translate(-50%, -50%) rotate(-45deg);
    }
    80% {
        opacity: 1;
        transform: scale(.89) translate(-50%, -50%) rotate(-45deg);
    }
    100% {
        opacity: 1;
        transform: scale(1) translate(-50%, -50%) rotate(-45deg);
    }
}

@keyframes bounceInBeforeDont {
    0% {
        opacity: 1;
        transform: scale(1) translate(-50%, -50%) rotate(45deg);
    }
    100% {
        opacity: 0;
        transform: scale(.3) translate(-50%, -50%) rotate(45deg);
    }
}

@keyframes bounceInAfterDont {
    0% {
        opacity: 1;
        transform: scale(1) translate(-50%, -50%) rotate(-45deg);
    }
    100% {
        opacity: 0;
        transform: scale(.3) translate(-50%, -50%) rotate(-45deg);
    }
}

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////

select {
    background: transparent;
    border: 1px dashed $theme-color-secondary;
    outline: none;
    border-radius: 2rem;
    -webkit-appearance: none;
    -moz-appearance: none;
    text-transform: none;
    cursor: pointer;
    appearance: none;

    option {
        background-color: $theme-color-secondary;
        color: choose-contrast-color($theme-color-secondary);
    }

    optgroup {
        background-color: darken($theme-color-secondary, 5);
        color: choose-contrast-color($theme-color-secondary);
    }
}
